// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NFTOnlyOrderCreated extends ethereum.Event {
  get params(): NFTOnlyOrderCreated__Params {
    return new NFTOnlyOrderCreated__Params(this);
  }
}

export class NFTOnlyOrderCreated__Params {
  _event: NFTOnlyOrderCreated;

  constructor(event: NFTOnlyOrderCreated) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get totalPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get currency(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get pubId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get profileId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class OrderCreated extends ethereum.Event {
  get params(): OrderCreated__Params {
    return new OrderCreated__Params(this);
  }
}

export class OrderCreated__Params {
  _event: OrderCreated;

  constructor(event: OrderCreated) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get totalPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get currency(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get pubId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get profileId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class SubOrderIsFulfilled extends ethereum.Event {
  get params(): SubOrderIsFulfilled__Params {
    return new SubOrderIsFulfilled__Params(this);
  }
}

export class SubOrderIsFulfilled__Params {
  _event: SubOrderIsFulfilled;

  constructor(event: SubOrderIsFulfilled) {
    this._event = event;
  }

  get subOrderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class UpdateNFTOnlyOrderMessage extends ethereum.Event {
  get params(): UpdateNFTOnlyOrderMessage__Params {
    return new UpdateNFTOnlyOrderMessage__Params(this);
  }
}

export class UpdateNFTOnlyOrderMessage__Params {
  _event: UpdateNFTOnlyOrderMessage;

  constructor(event: UpdateNFTOnlyOrderMessage) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newMessageDetails(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class UpdateOrderDetails extends ethereum.Event {
  get params(): UpdateOrderDetails__Params {
    return new UpdateOrderDetails__Params(this);
  }
}

export class UpdateOrderDetails__Params {
  _event: UpdateOrderDetails;

  constructor(event: UpdateOrderDetails) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newOrderDetails(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class UpdateOrderMessage extends ethereum.Event {
  get params(): UpdateOrderMessage__Params {
    return new UpdateOrderMessage__Params(this);
  }
}

export class UpdateOrderMessage__Params {
  _event: UpdateOrderMessage;

  constructor(event: UpdateOrderMessage) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newMessageDetails(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class UpdateSubOrderStatus extends ethereum.Event {
  get params(): UpdateSubOrderStatus__Params {
    return new UpdateSubOrderStatus__Params(this);
  }
}

export class UpdateSubOrderStatus__Params {
  _event: UpdateSubOrderStatus;

  constructor(event: UpdateSubOrderStatus) {
    this._event = event;
  }

  get subOrderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newSubOrderStatus(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class PixelOrderData extends ethereum.SmartContract {
  static bind(address: Address): PixelOrderData {
    return new PixelOrderData("PixelOrderData", address);
  }

  getAddressToNFTOnlyOrderIds(_address: Address): Array<BigInt> {
    let result = super.call(
      "getAddressToNFTOnlyOrderIds",
      "getAddressToNFTOnlyOrderIds(address):(uint256[])",
      [ethereum.Value.fromAddress(_address)]
    );

    return result[0].toBigIntArray();
  }

  try_getAddressToNFTOnlyOrderIds(
    _address: Address
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getAddressToNFTOnlyOrderIds",
      "getAddressToNFTOnlyOrderIds(address):(uint256[])",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getAddressToOrderIds(_address: Address): Array<BigInt> {
    let result = super.call(
      "getAddressToOrderIds",
      "getAddressToOrderIds(address):(uint256[])",
      [ethereum.Value.fromAddress(_address)]
    );

    return result[0].toBigIntArray();
  }

  try_getAddressToOrderIds(
    _address: Address
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getAddressToOrderIds",
      "getAddressToOrderIds(address):(uint256[])",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getAddressToTokenIds(_address: Address): Array<BigInt> {
    let result = super.call(
      "getAddressToTokenIds",
      "getAddressToTokenIds(address):(uint256[])",
      [ethereum.Value.fromAddress(_address)]
    );

    return result[0].toBigIntArray();
  }

  try_getAddressToTokenIds(
    _address: Address
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getAddressToTokenIds",
      "getAddressToTokenIds(address):(uint256[])",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getNFTOnlyOrderAmount(_orderId: BigInt): BigInt {
    let result = super.call(
      "getNFTOnlyOrderAmount",
      "getNFTOnlyOrderAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigInt();
  }

  try_getNFTOnlyOrderAmount(_orderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNFTOnlyOrderAmount",
      "getNFTOnlyOrderAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNFTOnlyOrderBuyer(_orderId: BigInt): Address {
    let result = super.call(
      "getNFTOnlyOrderBuyer",
      "getNFTOnlyOrderBuyer(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toAddress();
  }

  try_getNFTOnlyOrderBuyer(_orderId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getNFTOnlyOrderBuyer",
      "getNFTOnlyOrderBuyer(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getNFTOnlyOrderBuyerProfileId(_orderId: BigInt): BigInt {
    let result = super.call(
      "getNFTOnlyOrderBuyerProfileId",
      "getNFTOnlyOrderBuyerProfileId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigInt();
  }

  try_getNFTOnlyOrderBuyerProfileId(
    _orderId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNFTOnlyOrderBuyerProfileId",
      "getNFTOnlyOrderBuyerProfileId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNFTOnlyOrderChosenCurrency(_orderId: BigInt): Address {
    let result = super.call(
      "getNFTOnlyOrderChosenCurrency",
      "getNFTOnlyOrderChosenCurrency(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toAddress();
  }

  try_getNFTOnlyOrderChosenCurrency(
    _orderId: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getNFTOnlyOrderChosenCurrency",
      "getNFTOnlyOrderChosenCurrency(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getNFTOnlyOrderCollectionId(_orderId: BigInt): BigInt {
    let result = super.call(
      "getNFTOnlyOrderCollectionId",
      "getNFTOnlyOrderCollectionId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigInt();
  }

  try_getNFTOnlyOrderCollectionId(
    _orderId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNFTOnlyOrderCollectionId",
      "getNFTOnlyOrderCollectionId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNFTOnlyOrderMessages(_orderId: BigInt): Array<string> {
    let result = super.call(
      "getNFTOnlyOrderMessages",
      "getNFTOnlyOrderMessages(uint256):(string[])",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toStringArray();
  }

  try_getNFTOnlyOrderMessages(
    _orderId: BigInt
  ): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getNFTOnlyOrderMessages",
      "getNFTOnlyOrderMessages(uint256):(string[])",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  getNFTOnlyOrderProfileId(_orderId: BigInt): BigInt {
    let result = super.call(
      "getNFTOnlyOrderProfileId",
      "getNFTOnlyOrderProfileId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigInt();
  }

  try_getNFTOnlyOrderProfileId(_orderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNFTOnlyOrderProfileId",
      "getNFTOnlyOrderProfileId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNFTOnlyOrderPubId(_orderId: BigInt): BigInt {
    let result = super.call(
      "getNFTOnlyOrderPubId",
      "getNFTOnlyOrderPubId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigInt();
  }

  try_getNFTOnlyOrderPubId(_orderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNFTOnlyOrderPubId",
      "getNFTOnlyOrderPubId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNFTOnlyOrderSupply(): BigInt {
    let result = super.call(
      "getNFTOnlyOrderSupply",
      "getNFTOnlyOrderSupply():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getNFTOnlyOrderSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNFTOnlyOrderSupply",
      "getNFTOnlyOrderSupply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNFTOnlyOrderTimestamp(_orderId: BigInt): BigInt {
    let result = super.call(
      "getNFTOnlyOrderTimestamp",
      "getNFTOnlyOrderTimestamp(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigInt();
  }

  try_getNFTOnlyOrderTimestamp(_orderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNFTOnlyOrderTimestamp",
      "getNFTOnlyOrderTimestamp(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNFTOnlyOrderTokenIds(_orderId: BigInt): Array<BigInt> {
    let result = super.call(
      "getNFTOnlyOrderTokenIds",
      "getNFTOnlyOrderTokenIds(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigIntArray();
  }

  try_getNFTOnlyOrderTokenIds(
    _orderId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getNFTOnlyOrderTokenIds",
      "getNFTOnlyOrderTokenIds(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getNFTOnlyOrderTotalPrice(_orderId: BigInt): BigInt {
    let result = super.call(
      "getNFTOnlyOrderTotalPrice",
      "getNFTOnlyOrderTotalPrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigInt();
  }

  try_getNFTOnlyOrderTotalPrice(_orderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNFTOnlyOrderTotalPrice",
      "getNFTOnlyOrderTotalPrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrderBuyer(_orderId: BigInt): Address {
    let result = super.call(
      "getOrderBuyer",
      "getOrderBuyer(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toAddress();
  }

  try_getOrderBuyer(_orderId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getOrderBuyer",
      "getOrderBuyer(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getOrderBuyerProfileId(_orderId: BigInt): BigInt {
    let result = super.call(
      "getOrderBuyerProfileId",
      "getOrderBuyerProfileId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigInt();
  }

  try_getOrderBuyerProfileId(_orderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOrderBuyerProfileId",
      "getOrderBuyerProfileId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrderChosenCurrency(_orderId: BigInt): Address {
    let result = super.call(
      "getOrderChosenCurrency",
      "getOrderChosenCurrency(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toAddress();
  }

  try_getOrderChosenCurrency(_orderId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getOrderChosenCurrency",
      "getOrderChosenCurrency(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getOrderDetails(_orderId: BigInt): string {
    let result = super.call(
      "getOrderDetails",
      "getOrderDetails(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toString();
  }

  try_getOrderDetails(_orderId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getOrderDetails",
      "getOrderDetails(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getOrderMessages(_orderId: BigInt): Array<string> {
    let result = super.call(
      "getOrderMessages",
      "getOrderMessages(uint256):(string[])",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toStringArray();
  }

  try_getOrderMessages(_orderId: BigInt): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getOrderMessages",
      "getOrderMessages(uint256):(string[])",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  getOrderProfileId(_orderId: BigInt): BigInt {
    let result = super.call(
      "getOrderProfileId",
      "getOrderProfileId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigInt();
  }

  try_getOrderProfileId(_orderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOrderProfileId",
      "getOrderProfileId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrderPubId(_orderId: BigInt): BigInt {
    let result = super.call(
      "getOrderPubId",
      "getOrderPubId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigInt();
  }

  try_getOrderPubId(_orderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOrderPubId",
      "getOrderPubId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrderSubOrders(_orderId: BigInt): Array<BigInt> {
    let result = super.call(
      "getOrderSubOrders",
      "getOrderSubOrders(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigIntArray();
  }

  try_getOrderSubOrders(_orderId: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getOrderSubOrders",
      "getOrderSubOrders(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getOrderSupply(): BigInt {
    let result = super.call("getOrderSupply", "getOrderSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getOrderSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOrderSupply",
      "getOrderSupply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrderTimestamp(_orderId: BigInt): BigInt {
    let result = super.call(
      "getOrderTimestamp",
      "getOrderTimestamp(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigInt();
  }

  try_getOrderTimestamp(_orderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOrderTimestamp",
      "getOrderTimestamp(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrderTotalPrice(_orderId: BigInt): BigInt {
    let result = super.call(
      "getOrderTotalPrice",
      "getOrderTotalPrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBigInt();
  }

  try_getOrderTotalPrice(_orderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOrderTotalPrice",
      "getOrderTotalPrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrderWithPKP(_orderId: BigInt): boolean {
    let result = super.call(
      "getOrderWithPKP",
      "getOrderWithPKP(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return result[0].toBoolean();
  }

  try_getOrderWithPKP(_orderId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getOrderWithPKP",
      "getOrderWithPKP(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getSubOrderAmount(_subOrderId: BigInt): BigInt {
    let result = super.call(
      "getSubOrderAmount",
      "getSubOrderAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );

    return result[0].toBigInt();
  }

  try_getSubOrderAmount(_subOrderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSubOrderAmount",
      "getSubOrderAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSubOrderCollectionId(_subOrderId: BigInt): BigInt {
    let result = super.call(
      "getSubOrderCollectionId",
      "getSubOrderCollectionId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );

    return result[0].toBigInt();
  }

  try_getSubOrderCollectionId(
    _subOrderId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSubOrderCollectionId",
      "getSubOrderCollectionId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSubOrderFulfiller(_subOrderId: BigInt): Address {
    let result = super.call(
      "getSubOrderFulfiller",
      "getSubOrderFulfiller(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );

    return result[0].toAddress();
  }

  try_getSubOrderFulfiller(_subOrderId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getSubOrderFulfiller",
      "getSubOrderFulfiller(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getSubOrderIsFulfilled(_subOrderId: BigInt): boolean {
    let result = super.call(
      "getSubOrderIsFulfilled",
      "getSubOrderIsFulfilled(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );

    return result[0].toBoolean();
  }

  try_getSubOrderIsFulfilled(
    _subOrderId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getSubOrderIsFulfilled",
      "getSubOrderIsFulfilled(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getSubOrderOrderId(_subOrderId: BigInt): BigInt {
    let result = super.call(
      "getSubOrderOrderId",
      "getSubOrderOrderId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );

    return result[0].toBigInt();
  }

  try_getSubOrderOrderId(_subOrderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSubOrderOrderId",
      "getSubOrderOrderId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSubOrderPrice(_subOrderId: BigInt): BigInt {
    let result = super.call(
      "getSubOrderPrice",
      "getSubOrderPrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );

    return result[0].toBigInt();
  }

  try_getSubOrderPrice(_subOrderId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSubOrderPrice",
      "getSubOrderPrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSubOrderStatus(_subOrderId: BigInt): i32 {
    let result = super.call(
      "getSubOrderStatus",
      "getSubOrderStatus(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );

    return result[0].toI32();
  }

  try_getSubOrderStatus(_subOrderId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getSubOrderStatus",
      "getSubOrderStatus(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getSubOrderSupply(): BigInt {
    let result = super.call(
      "getSubOrderSupply",
      "getSubOrderSupply():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getSubOrderSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSubOrderSupply",
      "getSubOrderSupply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSubOrderTokenIds(_subOrderId: BigInt): Array<BigInt> {
    let result = super.call(
      "getSubOrderTokenIds",
      "getSubOrderTokenIds(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );

    return result[0].toBigIntArray();
  }

  try_getSubOrderTokenIds(
    _subOrderId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getSubOrderTokenIds",
      "getSubOrderTokenIds(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_subOrderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  marketCreator(): Address {
    let result = super.call("marketCreator", "marketCreator():(address)", []);

    return result[0].toAddress();
  }

  try_marketCreator(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "marketCreator",
      "marketCreator():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  pixelAccessControl(): Address {
    let result = super.call(
      "pixelAccessControl",
      "pixelAccessControl():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_pixelAccessControl(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pixelAccessControl",
      "pixelAccessControl():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pixelDesignData(): Address {
    let result = super.call(
      "pixelDesignData",
      "pixelDesignData():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_pixelDesignData(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pixelDesignData",
      "pixelDesignData():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _pixelAccessControlAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _pixelDesignDataAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateNFTOnlyOrderCall extends ethereum.Call {
  get inputs(): CreateNFTOnlyOrderCall__Inputs {
    return new CreateNFTOnlyOrderCall__Inputs(this);
  }

  get outputs(): CreateNFTOnlyOrderCall__Outputs {
    return new CreateNFTOnlyOrderCall__Outputs(this);
  }
}

export class CreateNFTOnlyOrderCall__Inputs {
  _call: CreateNFTOnlyOrderCall;

  constructor(call: CreateNFTOnlyOrderCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _chosenCurrency(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _buyer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _pubId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _profileId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _buyerProfileId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _totalPrice(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _collectionId(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }
}

export class CreateNFTOnlyOrderCall__Outputs {
  _call: CreateNFTOnlyOrderCall;

  constructor(call: CreateNFTOnlyOrderCall) {
    this._call = call;
  }
}

export class CreateOrderCall extends ethereum.Call {
  get inputs(): CreateOrderCall__Inputs {
    return new CreateOrderCall__Inputs(this);
  }

  get outputs(): CreateOrderCall__Outputs {
    return new CreateOrderCall__Outputs(this);
  }
}

export class CreateOrderCall__Inputs {
  _call: CreateOrderCall;

  constructor(call: CreateOrderCall) {
    this._call = call;
  }

  get _subOrderIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _details(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _chosenCurrency(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _buyer(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _pubId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _profileId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _buyerProfileId(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _totalPrice(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _withPKP(): boolean {
    return this._call.inputValues[8].value.toBoolean();
  }
}

export class CreateOrderCall__Outputs {
  _call: CreateOrderCall;

  constructor(call: CreateOrderCall) {
    this._call = call;
  }
}

export class CreateSubOrderCall extends ethereum.Call {
  get inputs(): CreateSubOrderCall__Inputs {
    return new CreateSubOrderCall__Inputs(this);
  }

  get outputs(): CreateSubOrderCall__Outputs {
    return new CreateSubOrderCall__Outputs(this);
  }
}

export class CreateSubOrderCall__Inputs {
  _call: CreateSubOrderCall;

  constructor(call: CreateSubOrderCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _fullfiller(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _buyer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _orderId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _collectionId(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateSubOrderCall__Outputs {
  _call: CreateSubOrderCall;

  constructor(call: CreateSubOrderCall) {
    this._call = call;
  }
}

export class SetMarketCreatorAddressCall extends ethereum.Call {
  get inputs(): SetMarketCreatorAddressCall__Inputs {
    return new SetMarketCreatorAddressCall__Inputs(this);
  }

  get outputs(): SetMarketCreatorAddressCall__Outputs {
    return new SetMarketCreatorAddressCall__Outputs(this);
  }
}

export class SetMarketCreatorAddressCall__Inputs {
  _call: SetMarketCreatorAddressCall;

  constructor(call: SetMarketCreatorAddressCall) {
    this._call = call;
  }

  get _newMarketCreatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMarketCreatorAddressCall__Outputs {
  _call: SetMarketCreatorAddressCall;

  constructor(call: SetMarketCreatorAddressCall) {
    this._call = call;
  }
}

export class SetNFTOnlyOrderMessageCall extends ethereum.Call {
  get inputs(): SetNFTOnlyOrderMessageCall__Inputs {
    return new SetNFTOnlyOrderMessageCall__Inputs(this);
  }

  get outputs(): SetNFTOnlyOrderMessageCall__Outputs {
    return new SetNFTOnlyOrderMessageCall__Outputs(this);
  }
}

export class SetNFTOnlyOrderMessageCall__Inputs {
  _call: SetNFTOnlyOrderMessageCall;

  constructor(call: SetNFTOnlyOrderMessageCall) {
    this._call = call;
  }

  get _newMessage(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _orderId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetNFTOnlyOrderMessageCall__Outputs {
  _call: SetNFTOnlyOrderMessageCall;

  constructor(call: SetNFTOnlyOrderMessageCall) {
    this._call = call;
  }
}

export class SetOrderDetailsCall extends ethereum.Call {
  get inputs(): SetOrderDetailsCall__Inputs {
    return new SetOrderDetailsCall__Inputs(this);
  }

  get outputs(): SetOrderDetailsCall__Outputs {
    return new SetOrderDetailsCall__Outputs(this);
  }
}

export class SetOrderDetailsCall__Inputs {
  _call: SetOrderDetailsCall;

  constructor(call: SetOrderDetailsCall) {
    this._call = call;
  }

  get _newDetails(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _orderId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetOrderDetailsCall__Outputs {
  _call: SetOrderDetailsCall;

  constructor(call: SetOrderDetailsCall) {
    this._call = call;
  }
}

export class SetOrderMessageCall extends ethereum.Call {
  get inputs(): SetOrderMessageCall__Inputs {
    return new SetOrderMessageCall__Inputs(this);
  }

  get outputs(): SetOrderMessageCall__Outputs {
    return new SetOrderMessageCall__Outputs(this);
  }
}

export class SetOrderMessageCall__Inputs {
  _call: SetOrderMessageCall;

  constructor(call: SetOrderMessageCall) {
    this._call = call;
  }

  get _newMessage(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _orderId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetOrderMessageCall__Outputs {
  _call: SetOrderMessageCall;

  constructor(call: SetOrderMessageCall) {
    this._call = call;
  }
}

export class SetPixelAccessControlAddressCall extends ethereum.Call {
  get inputs(): SetPixelAccessControlAddressCall__Inputs {
    return new SetPixelAccessControlAddressCall__Inputs(this);
  }

  get outputs(): SetPixelAccessControlAddressCall__Outputs {
    return new SetPixelAccessControlAddressCall__Outputs(this);
  }
}

export class SetPixelAccessControlAddressCall__Inputs {
  _call: SetPixelAccessControlAddressCall;

  constructor(call: SetPixelAccessControlAddressCall) {
    this._call = call;
  }

  get _newPixelAccessControlAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPixelAccessControlAddressCall__Outputs {
  _call: SetPixelAccessControlAddressCall;

  constructor(call: SetPixelAccessControlAddressCall) {
    this._call = call;
  }
}

export class SetPixelDesignDataAddressCall extends ethereum.Call {
  get inputs(): SetPixelDesignDataAddressCall__Inputs {
    return new SetPixelDesignDataAddressCall__Inputs(this);
  }

  get outputs(): SetPixelDesignDataAddressCall__Outputs {
    return new SetPixelDesignDataAddressCall__Outputs(this);
  }
}

export class SetPixelDesignDataAddressCall__Inputs {
  _call: SetPixelDesignDataAddressCall;

  constructor(call: SetPixelDesignDataAddressCall) {
    this._call = call;
  }

  get _newPixelDesignDataAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPixelDesignDataAddressCall__Outputs {
  _call: SetPixelDesignDataAddressCall;

  constructor(call: SetPixelDesignDataAddressCall) {
    this._call = call;
  }
}

export class SetSubOrderStatusCall extends ethereum.Call {
  get inputs(): SetSubOrderStatusCall__Inputs {
    return new SetSubOrderStatusCall__Inputs(this);
  }

  get outputs(): SetSubOrderStatusCall__Outputs {
    return new SetSubOrderStatusCall__Outputs(this);
  }
}

export class SetSubOrderStatusCall__Inputs {
  _call: SetSubOrderStatusCall;

  constructor(call: SetSubOrderStatusCall) {
    this._call = call;
  }

  get _subOrderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _status(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetSubOrderStatusCall__Outputs {
  _call: SetSubOrderStatusCall;

  constructor(call: SetSubOrderStatusCall) {
    this._call = call;
  }
}

export class SetSubOrderisFulfilledCall extends ethereum.Call {
  get inputs(): SetSubOrderisFulfilledCall__Inputs {
    return new SetSubOrderisFulfilledCall__Inputs(this);
  }

  get outputs(): SetSubOrderisFulfilledCall__Outputs {
    return new SetSubOrderisFulfilledCall__Outputs(this);
  }
}

export class SetSubOrderisFulfilledCall__Inputs {
  _call: SetSubOrderisFulfilledCall;

  constructor(call: SetSubOrderisFulfilledCall) {
    this._call = call;
  }

  get _subOrderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSubOrderisFulfilledCall__Outputs {
  _call: SetSubOrderisFulfilledCall;

  constructor(call: SetSubOrderisFulfilledCall) {
    this._call = call;
  }
}
