// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CollectionCreated extends ethereum.Event {
  get params(): CollectionCreated__Params {
    return new CollectionCreated__Params(this);
  }
}

export class CollectionCreated__Params {
  _event: CollectionCreated;

  constructor(event: CollectionCreated) {
    this._event = event;
  }

  get collectionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get pubId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get profileId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get uri(): string {
    return this._event.parameters[3].value.toString();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class CollectionDeleted extends ethereum.Event {
  get params(): CollectionDeleted__Params {
    return new CollectionDeleted__Params(this);
  }
}

export class CollectionDeleted__Params {
  _event: CollectionDeleted;

  constructor(event: CollectionDeleted) {
    this._event = event;
  }

  get collectionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CollectionMintedTokensSet extends ethereum.Event {
  get params(): CollectionMintedTokensSet__Params {
    return new CollectionMintedTokensSet__Params(this);
  }
}

export class CollectionMintedTokensSet__Params {
  _event: CollectionMintedTokensSet;

  constructor(event: CollectionMintedTokensSet) {
    this._event = event;
  }

  get collectionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get mintedTokensAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CollectionTokenIdsSet extends ethereum.Event {
  get params(): CollectionTokenIdsSet__Params {
    return new CollectionTokenIdsSet__Params(this);
  }
}

export class CollectionTokenIdsSet__Params {
  _event: CollectionTokenIdsSet;

  constructor(event: CollectionTokenIdsSet) {
    this._event = event;
  }

  get collectionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenIds(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class DropCollectionsUpdated extends ethereum.Event {
  get params(): DropCollectionsUpdated__Params {
    return new DropCollectionsUpdated__Params(this);
  }
}

export class DropCollectionsUpdated__Params {
  _event: DropCollectionsUpdated;

  constructor(event: DropCollectionsUpdated) {
    this._event = event;
  }

  get dropId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get collectionIds(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get oldCollectionIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get uri(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class DropCreated extends ethereum.Event {
  get params(): DropCreated__Params {
    return new DropCreated__Params(this);
  }
}

export class DropCreated__Params {
  _event: DropCreated;

  constructor(event: DropCreated) {
    this._event = event;
  }

  get dropId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get uri(): string {
    return this._event.parameters[1].value.toString();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class DropDeleted extends ethereum.Event {
  get params(): DropDeleted__Params {
    return new DropDeleted__Params(this);
  }
}

export class DropDeleted__Params {
  _event: DropDeleted;

  constructor(event: DropDeleted) {
    this._event = event;
  }

  get dropId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class TokensMinted extends ethereum.Event {
  get params(): TokensMinted__Params {
    return new TokensMinted__Params(this);
  }
}

export class TokensMinted__Params {
  _event: TokensMinted;

  constructor(event: TokensMinted) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get collectionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PixelDesignData__setCollectionInput_collectionDataStruct extends ethereum.Tuple {
  get acceptedTokens(): Array<Address> {
    return this[0].toAddressArray();
  }

  get prices(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get tokenIds(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get communityIds(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get uri(): string {
    return this[4].toString();
  }

  get fulfiller(): Address {
    return this[5].toAddress();
  }

  get creator(): Address {
    return this[6].toAddress();
  }

  get collectionId(): BigInt {
    return this[7].toBigInt();
  }

  get pubId(): BigInt {
    return this[8].toBigInt();
  }

  get profileId(): BigInt {
    return this[9].toBigInt();
  }

  get dropId(): BigInt {
    return this[10].toBigInt();
  }

  get mintedTokens(): BigInt {
    return this[11].toBigInt();
  }

  get amount(): BigInt {
    return this[12].toBigInt();
  }

  get origin(): i32 {
    return this[13].toI32();
  }

  get pixelType(): i32 {
    return this[14].toI32();
  }

  get unlimited(): boolean {
    return this[15].toBoolean();
  }

  get encrypted(): boolean {
    return this[16].toBoolean();
  }
}

export class PixelDesignData extends ethereum.SmartContract {
  static bind(address: Address): PixelDesignData {
    return new PixelDesignData("PixelDesignData", address);
  }

  collectionCreator(): Address {
    let result = super.call(
      "collectionCreator",
      "collectionCreator():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_collectionCreator(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "collectionCreator",
      "collectionCreator():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCollectionAcceptedTokens(_collectionId: BigInt): Array<Address> {
    let result = super.call(
      "getCollectionAcceptedTokens",
      "getCollectionAcceptedTokens(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toAddressArray();
  }

  try_getCollectionAcceptedTokens(
    _collectionId: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getCollectionAcceptedTokens",
      "getCollectionAcceptedTokens(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getCollectionAmount(_collectionId: BigInt): BigInt {
    let result = super.call(
      "getCollectionAmount",
      "getCollectionAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toBigInt();
  }

  try_getCollectionAmount(_collectionId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCollectionAmount",
      "getCollectionAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCollectionCommunityIds(_collectionId: BigInt): Array<BigInt> {
    let result = super.call(
      "getCollectionCommunityIds",
      "getCollectionCommunityIds(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toBigIntArray();
  }

  try_getCollectionCommunityIds(
    _collectionId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getCollectionCommunityIds",
      "getCollectionCommunityIds(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getCollectionCreator(_collectionId: BigInt): Address {
    let result = super.call(
      "getCollectionCreator",
      "getCollectionCreator(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toAddress();
  }

  try_getCollectionCreator(
    _collectionId: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getCollectionCreator",
      "getCollectionCreator(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCollectionDropId(_collectionId: BigInt): BigInt {
    let result = super.call(
      "getCollectionDropId",
      "getCollectionDropId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toBigInt();
  }

  try_getCollectionDropId(_collectionId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCollectionDropId",
      "getCollectionDropId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCollectionEncrypted(_collectionId: BigInt): boolean {
    let result = super.call(
      "getCollectionEncrypted",
      "getCollectionEncrypted(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toBoolean();
  }

  try_getCollectionEncrypted(
    _collectionId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getCollectionEncrypted",
      "getCollectionEncrypted(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getCollectionFulfiller(_collectionId: BigInt): Address {
    let result = super.call(
      "getCollectionFulfiller",
      "getCollectionFulfiller(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toAddress();
  }

  try_getCollectionFulfiller(
    _collectionId: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getCollectionFulfiller",
      "getCollectionFulfiller(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCollectionOrigin(_collectionId: BigInt): i32 {
    let result = super.call(
      "getCollectionOrigin",
      "getCollectionOrigin(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toI32();
  }

  try_getCollectionOrigin(_collectionId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getCollectionOrigin",
      "getCollectionOrigin(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getCollectionPrices(_collectionId: BigInt): Array<BigInt> {
    let result = super.call(
      "getCollectionPrices",
      "getCollectionPrices(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toBigIntArray();
  }

  try_getCollectionPrices(
    _collectionId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getCollectionPrices",
      "getCollectionPrices(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getCollectionPixelType(_collectionId: BigInt): i32 {
    let result = super.call(
      "getCollectionPixelType",
      "getCollectionPixelType(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toI32();
  }

  try_getCollectionPixelType(_collectionId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getCollectionPixelType",
      "getCollectionPixelType(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getCollectionProfileId(_collectionId: BigInt): BigInt {
    let result = super.call(
      "getCollectionProfileId",
      "getCollectionProfileId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toBigInt();
  }

  try_getCollectionProfileId(
    _collectionId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCollectionProfileId",
      "getCollectionProfileId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCollectionPubId(_collectionId: BigInt): BigInt {
    let result = super.call(
      "getCollectionPubId",
      "getCollectionPubId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toBigInt();
  }

  try_getCollectionPubId(_collectionId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCollectionPubId",
      "getCollectionPubId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCollectionSupply(): BigInt {
    let result = super.call(
      "getCollectionSupply",
      "getCollectionSupply():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCollectionSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCollectionSupply",
      "getCollectionSupply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCollectionTokenIds(_collectionId: BigInt): Array<BigInt> {
    let result = super.call(
      "getCollectionTokenIds",
      "getCollectionTokenIds(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toBigIntArray();
  }

  try_getCollectionTokenIds(
    _collectionId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getCollectionTokenIds",
      "getCollectionTokenIds(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getCollectionTokensMinted(_collectionId: BigInt): BigInt {
    let result = super.call(
      "getCollectionTokensMinted",
      "getCollectionTokensMinted(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toBigInt();
  }

  try_getCollectionTokensMinted(
    _collectionId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCollectionTokensMinted",
      "getCollectionTokensMinted(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCollectionURI(_collectionId: BigInt): string {
    let result = super.call(
      "getCollectionURI",
      "getCollectionURI(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toString();
  }

  try_getCollectionURI(_collectionId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getCollectionURI",
      "getCollectionURI(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getCollectionUnlimited(_collectionId: BigInt): boolean {
    let result = super.call(
      "getCollectionUnlimited",
      "getCollectionUnlimited(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );

    return result[0].toBoolean();
  }

  try_getCollectionUnlimited(
    _collectionId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getCollectionUnlimited",
      "getCollectionUnlimited(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_collectionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getDropCollectionIds(_dropId: BigInt): Array<BigInt> {
    let result = super.call(
      "getDropCollectionIds",
      "getDropCollectionIds(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_dropId)]
    );

    return result[0].toBigIntArray();
  }

  try_getDropCollectionIds(
    _dropId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getDropCollectionIds",
      "getDropCollectionIds(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_dropId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getDropCreator(_dropId: BigInt): Address {
    let result = super.call(
      "getDropCreator",
      "getDropCreator(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_dropId)]
    );

    return result[0].toAddress();
  }

  try_getDropCreator(_dropId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getDropCreator",
      "getDropCreator(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_dropId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDropSupply(): BigInt {
    let result = super.call("getDropSupply", "getDropSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getDropSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDropSupply",
      "getDropSupply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDropURI(_dropId: BigInt): string {
    let result = super.call("getDropURI", "getDropURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_dropId)
    ]);

    return result[0].toString();
  }

  try_getDropURI(_dropId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("getDropURI", "getDropURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_dropId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getIsCollectionTokenAccepted(
    _collectionId: BigInt,
    _tokenAddress: Address
  ): boolean {
    let result = super.call(
      "getIsCollectionTokenAccepted",
      "getIsCollectionTokenAccepted(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_collectionId),
        ethereum.Value.fromAddress(_tokenAddress)
      ]
    );

    return result[0].toBoolean();
  }

  try_getIsCollectionTokenAccepted(
    _collectionId: BigInt,
    _tokenAddress: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getIsCollectionTokenAccepted",
      "getIsCollectionTokenAccepted(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_collectionId),
        ethereum.Value.fromAddress(_tokenAddress)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getTokenCollection(_tokenId: BigInt): BigInt {
    let result = super.call(
      "getTokenCollection",
      "getTokenCollection(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_getTokenCollection(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTokenCollection",
      "getTokenCollection(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTokenId(_tokenId: BigInt): BigInt {
    let result = super.call("getTokenId", "getTokenId(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toBigInt();
  }

  try_getTokenId(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getTokenId", "getTokenId(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTokenIndex(_tokenId: BigInt): BigInt {
    let result = super.call(
      "getTokenIndex",
      "getTokenIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_getTokenIndex(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTokenIndex",
      "getTokenIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTokenSupply(): BigInt {
    let result = super.call("getTokenSupply", "getTokenSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getTokenSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTokenSupply",
      "getTokenSupply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTokenURI(_tokenId: BigInt): string {
    let result = super.call("getTokenURI", "getTokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_getTokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("getTokenURI", "getTokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nftCreator(): Address {
    let result = super.call("nftCreator", "nftCreator():(address)", []);

    return result[0].toAddress();
  }

  try_nftCreator(): ethereum.CallResult<Address> {
    let result = super.tryCall("nftCreator", "nftCreator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pixelAccessControl(): Address {
    let result = super.call(
      "pixelAccessControl",
      "pixelAccessControl():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_pixelAccessControl(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pixelAccessControl",
      "pixelAccessControl():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  setCollection(
    _collectionData: PixelDesignData__setCollectionInput_collectionDataStruct
  ): BigInt {
    let result = super.call(
      "setCollection",
      "setCollection((address[],uint256[],uint256[],uint256[],string,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bool,bool)):(uint256)",
      [ethereum.Value.fromTuple(_collectionData)]
    );

    return result[0].toBigInt();
  }

  try_setCollection(
    _collectionData: PixelDesignData__setCollectionInput_collectionDataStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "setCollection",
      "setCollection((address[],uint256[],uint256[],uint256[],string,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bool,bool)):(uint256)",
      [ethereum.Value.fromTuple(_collectionData)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _pixelAccessControlAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateDropCall extends ethereum.Call {
  get inputs(): CreateDropCall__Inputs {
    return new CreateDropCall__Inputs(this);
  }

  get outputs(): CreateDropCall__Outputs {
    return new CreateDropCall__Outputs(this);
  }
}

export class CreateDropCall__Inputs {
  _call: CreateDropCall;

  constructor(call: CreateDropCall) {
    this._call = call;
  }

  get _uri(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _creator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreateDropCall__Outputs {
  _call: CreateDropCall;

  constructor(call: CreateDropCall) {
    this._call = call;
  }
}

export class DeleteCollectionCall extends ethereum.Call {
  get inputs(): DeleteCollectionCall__Inputs {
    return new DeleteCollectionCall__Inputs(this);
  }

  get outputs(): DeleteCollectionCall__Outputs {
    return new DeleteCollectionCall__Outputs(this);
  }
}

export class DeleteCollectionCall__Inputs {
  _call: DeleteCollectionCall;

  constructor(call: DeleteCollectionCall) {
    this._call = call;
  }

  get _collectionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DeleteCollectionCall__Outputs {
  _call: DeleteCollectionCall;

  constructor(call: DeleteCollectionCall) {
    this._call = call;
  }
}

export class DeleteDropCall extends ethereum.Call {
  get inputs(): DeleteDropCall__Inputs {
    return new DeleteDropCall__Inputs(this);
  }

  get outputs(): DeleteDropCall__Outputs {
    return new DeleteDropCall__Outputs(this);
  }
}

export class DeleteDropCall__Inputs {
  _call: DeleteDropCall;

  constructor(call: DeleteDropCall) {
    this._call = call;
  }

  get _dropId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DeleteDropCall__Outputs {
  _call: DeleteDropCall;

  constructor(call: DeleteDropCall) {
    this._call = call;
  }
}

export class ModifyCollectionsInDropCall extends ethereum.Call {
  get inputs(): ModifyCollectionsInDropCall__Inputs {
    return new ModifyCollectionsInDropCall__Inputs(this);
  }

  get outputs(): ModifyCollectionsInDropCall__Outputs {
    return new ModifyCollectionsInDropCall__Outputs(this);
  }
}

export class ModifyCollectionsInDropCall__Inputs {
  _call: ModifyCollectionsInDropCall;

  constructor(call: ModifyCollectionsInDropCall) {
    this._call = call;
  }

  get _collectionIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _uri(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _dropId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ModifyCollectionsInDropCall__Outputs {
  _call: ModifyCollectionsInDropCall;

  constructor(call: ModifyCollectionsInDropCall) {
    this._call = call;
  }
}

export class SetCollectionCall extends ethereum.Call {
  get inputs(): SetCollectionCall__Inputs {
    return new SetCollectionCall__Inputs(this);
  }

  get outputs(): SetCollectionCall__Outputs {
    return new SetCollectionCall__Outputs(this);
  }
}

export class SetCollectionCall__Inputs {
  _call: SetCollectionCall;

  constructor(call: SetCollectionCall) {
    this._call = call;
  }

  get _collectionData(): SetCollectionCall_collectionDataStruct {
    return changetype<SetCollectionCall_collectionDataStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetCollectionCall__Outputs {
  _call: SetCollectionCall;

  constructor(call: SetCollectionCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SetCollectionCall_collectionDataStruct extends ethereum.Tuple {
  get acceptedTokens(): Array<Address> {
    return this[0].toAddressArray();
  }

  get prices(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get tokenIds(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get communityIds(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get uri(): string {
    return this[4].toString();
  }

  get fulfiller(): Address {
    return this[5].toAddress();
  }

  get creator(): Address {
    return this[6].toAddress();
  }

  get collectionId(): BigInt {
    return this[7].toBigInt();
  }

  get pubId(): BigInt {
    return this[8].toBigInt();
  }

  get profileId(): BigInt {
    return this[9].toBigInt();
  }

  get dropId(): BigInt {
    return this[10].toBigInt();
  }

  get mintedTokens(): BigInt {
    return this[11].toBigInt();
  }

  get amount(): BigInt {
    return this[12].toBigInt();
  }

  get origin(): i32 {
    return this[13].toI32();
  }

  get pixelType(): i32 {
    return this[14].toI32();
  }

  get unlimited(): boolean {
    return this[15].toBoolean();
  }

  get encrypted(): boolean {
    return this[16].toBoolean();
  }
}

export class SetCollectionCreatorAddressCall extends ethereum.Call {
  get inputs(): SetCollectionCreatorAddressCall__Inputs {
    return new SetCollectionCreatorAddressCall__Inputs(this);
  }

  get outputs(): SetCollectionCreatorAddressCall__Outputs {
    return new SetCollectionCreatorAddressCall__Outputs(this);
  }
}

export class SetCollectionCreatorAddressCall__Inputs {
  _call: SetCollectionCreatorAddressCall;

  constructor(call: SetCollectionCreatorAddressCall) {
    this._call = call;
  }

  get _newCollectionCreatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCollectionCreatorAddressCall__Outputs {
  _call: SetCollectionCreatorAddressCall;

  constructor(call: SetCollectionCreatorAddressCall) {
    this._call = call;
  }
}

export class SetCollectionMintedTokensCall extends ethereum.Call {
  get inputs(): SetCollectionMintedTokensCall__Inputs {
    return new SetCollectionMintedTokensCall__Inputs(this);
  }

  get outputs(): SetCollectionMintedTokensCall__Outputs {
    return new SetCollectionMintedTokensCall__Outputs(this);
  }
}

export class SetCollectionMintedTokensCall__Inputs {
  _call: SetCollectionMintedTokensCall;

  constructor(call: SetCollectionMintedTokensCall) {
    this._call = call;
  }

  get _collectionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _mintedTokens(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetCollectionMintedTokensCall__Outputs {
  _call: SetCollectionMintedTokensCall;

  constructor(call: SetCollectionMintedTokensCall) {
    this._call = call;
  }
}

export class SetCollectionTokenIdsCall extends ethereum.Call {
  get inputs(): SetCollectionTokenIdsCall__Inputs {
    return new SetCollectionTokenIdsCall__Inputs(this);
  }

  get outputs(): SetCollectionTokenIdsCall__Outputs {
    return new SetCollectionTokenIdsCall__Outputs(this);
  }
}

export class SetCollectionTokenIdsCall__Inputs {
  _call: SetCollectionTokenIdsCall;

  constructor(call: SetCollectionTokenIdsCall) {
    this._call = call;
  }

  get _collectionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newTokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetCollectionTokenIdsCall__Outputs {
  _call: SetCollectionTokenIdsCall;

  constructor(call: SetCollectionTokenIdsCall) {
    this._call = call;
  }
}

export class SetNFTCall extends ethereum.Call {
  get inputs(): SetNFTCall__Inputs {
    return new SetNFTCall__Inputs(this);
  }

  get outputs(): SetNFTCall__Outputs {
    return new SetNFTCall__Outputs(this);
  }
}

export class SetNFTCall__Inputs {
  _call: SetNFTCall;

  constructor(call: SetNFTCall) {
    this._call = call;
  }

  get _tokenData(): SetNFTCall_tokenDataStruct {
    return changetype<SetNFTCall_tokenDataStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetNFTCall__Outputs {
  _call: SetNFTCall;

  constructor(call: SetNFTCall) {
    this._call = call;
  }
}

export class SetNFTCall_tokenDataStruct extends ethereum.Tuple {
  get uri(): string {
    return this[0].toString();
  }

  get chosenCurrency(): Address {
    return this[1].toAddress();
  }

  get tokenId(): BigInt {
    return this[2].toBigInt();
  }

  get collectionId(): BigInt {
    return this[3].toBigInt();
  }

  get index(): BigInt {
    return this[4].toBigInt();
  }
}

export class SetNFTCreatorAddressCall extends ethereum.Call {
  get inputs(): SetNFTCreatorAddressCall__Inputs {
    return new SetNFTCreatorAddressCall__Inputs(this);
  }

  get outputs(): SetNFTCreatorAddressCall__Outputs {
    return new SetNFTCreatorAddressCall__Outputs(this);
  }
}

export class SetNFTCreatorAddressCall__Inputs {
  _call: SetNFTCreatorAddressCall;

  constructor(call: SetNFTCreatorAddressCall) {
    this._call = call;
  }

  get _newNFTCreatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetNFTCreatorAddressCall__Outputs {
  _call: SetNFTCreatorAddressCall;

  constructor(call: SetNFTCreatorAddressCall) {
    this._call = call;
  }
}

export class SetPixelAccessControlAddressCall extends ethereum.Call {
  get inputs(): SetPixelAccessControlAddressCall__Inputs {
    return new SetPixelAccessControlAddressCall__Inputs(this);
  }

  get outputs(): SetPixelAccessControlAddressCall__Outputs {
    return new SetPixelAccessControlAddressCall__Outputs(this);
  }
}

export class SetPixelAccessControlAddressCall__Inputs {
  _call: SetPixelAccessControlAddressCall;

  constructor(call: SetPixelAccessControlAddressCall) {
    this._call = call;
  }

  get _newPixelAccessControlAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPixelAccessControlAddressCall__Outputs {
  _call: SetPixelAccessControlAddressCall;

  constructor(call: SetPixelAccessControlAddressCall) {
    this._call = call;
  }
}
