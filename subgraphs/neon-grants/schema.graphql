type AllClaimedMilestone @entity(immutable: false) {
  id: Bytes!
  grantId: BigInt! # uint256
  milestone: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GrantCreated @entity(immutable: false) {
  id: Bytes!
  grantId: BigInt! # uint256
  creator: Bytes! # address
  pubId: BigInt! # uint256
  profileId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  levelInfo: [LevelInfo!]!
  milestones: [Milestone!]!
  acceptedCurrencies: [Bytes!]!
  granteeAddresses: [Bytes!]!
  splits: [BigInt!]!
  uri: String!
  grantMetadata: GrantMetadata
  fundedAmount: [Funded!]
  sticker: Boolean!
  poster: Boolean!
  shirt: Boolean!
  hoodie: Boolean!
  funders: [Funder!]
}

type GrantDeleted @entity(immutable: false) {
  id: Bytes!
  grantId: BigInt! # uint256
  deleter: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GrantFunded @entity(immutable: false) {
  id: Bytes!
  currency: Bytes! # address
  grantId: BigInt! # uint256
  grant: GrantCreated!
  funder: Bytes!
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Collection @entity(immutable: false) {
  id: Bytes!
  collectionId: BigInt!
  prices: [BigInt!]!
  uri: String!
  pixelType: String!
  collectionMetadata: CollectionMetadata
}

type CollectionMetadata @entity {
  id: ID!
  title: String
  description: String
  images: [String!]
  tags: String
  colors: String
  sizes: String
  access: String
  audio: String
  video: String
  onBlankon: String
  communities: String
  microbrandCover: String
  profileHandle: String
  microbrand: String
  mediaCover: String
  visibility: String
  mediaTypes: String
  prompt: String
  style: String
  sex: String
}

type GrantOrder @entity(immutable: false) {
  id: Bytes!
  orderId: BigInt!
  level: BigInt!
  encryptedFulfillment: String!
  currency: Bytes! # address
  grantId: BigInt! # uint256
  grant: GrantCreated!
  funder: Bytes!
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  orderCollections: [Collection!]
}

type MilestoneClaimed @entity(immutable: false) {
  id: Bytes!
  claimer: Bytes! # address
  milestone: Int! # uint8
  grantId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MilestoneStatusUpdated @entity(immutable: false) {
  id: Bytes!
  updater: Bytes! # address
  grantId: BigInt! # uint256
  milestone: Int! # uint8
  status: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Milestone @entity(immutable: false) {
  id: String!
  currencyGoal: [CurrencyGoal!]
  granteeClaimed: [Boolean!]
  submitBy: BigInt!
  status: BigInt!
  allClaimed: Boolean
}

type LevelInfo @entity(immutable: false) {
  id: String!
  collectionIds: [BigInt!]
  amounts: [BigInt!]
  level: BigInt!
}

type GrantMetadata @entity(immutable: false) {
  id: String!
  title: String
  description: String
  team: String
  tech: String
  strategy: String
  cover: String
  experience: String
  milestones: [String!]
}

type CurrencyGoal @entity(immutable: false) {
  id: String!
  currency: Bytes!
  amount: BigInt!
}

type Funded @entity(immutable: false) {
  id: String!
  currency: Bytes!
  funded: BigInt!
}

type CollectionGrantId @entity(immutable: false) {
  id: String!
  collectionId: BigInt!
  grants: [GrantCreated!]!
}
type CollectionCreated @entity(immutable: true) {
  id: Bytes!
  collectionId: BigInt! # uint256
  pubId: BigInt! # uint256
  profileId: BigInt! # uint256
  uri: String! # string
  amount: BigInt! # uint256
  owner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollectionDeleted @entity(immutable: true) {
  id: Bytes!
  collectionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollectionMintedTokensSet @entity(immutable: true) {
  id: Bytes!
  collectionId: BigInt! # uint256
  mintedTokensAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollectionTokenIdsSet @entity(immutable: true) {
  id: Bytes!
  collectionId: BigInt! # uint256
  tokenIds: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DropCollectionsUpdated @entity(immutable: true) {
  id: Bytes!
  dropId: BigInt! # uint256
  collectionIds: [BigInt!]! # uint256[]
  oldCollectionIds: [BigInt!]! # uint256[]
  uri: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DropCreated @entity(immutable: true) {
  id: Bytes!
  dropId: BigInt! # uint256
  uri: String! # string
  creator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DropDeleted @entity(immutable: true) {
  id: Bytes!
  dropId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokensMinted @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  collectionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Funder @entity(immutable: false) {
  id: String!
  address: Bytes!
  daiAmount: BigInt!
}
type CurrencyAdded @entity(immutable: true) {
  id: Bytes!
  currency: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CurrencyRemoved @entity(immutable: true) {
  id: Bytes!
  currency: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DesignerSplitSet @entity(immutable: true) {
  id: Bytes!
  designer: Bytes! # address
  pixelType: Int! # uint8
  split: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FulfillerBaseSet @entity(immutable: true) {
  id: Bytes!
  fulfiller: Bytes! # address
  pixelType: Int! # uint8
  split: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FulfillerSplitSet @entity(immutable: true) {
  id: Bytes!
  fulfiller: Bytes! # address
  pixelType: Int! # uint8
  split: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OracleUpdated @entity(immutable: true) {
  id: Bytes!
  currency: Bytes! # address
  rate: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TreasurySplitSet @entity(immutable: true) {
  id: Bytes!
  treasury: Bytes! # address
  pixelType: Int! # uint8
  split: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
